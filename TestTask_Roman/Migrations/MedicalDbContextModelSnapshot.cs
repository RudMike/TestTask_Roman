// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestTask_Roman.Data.Contexts;

#nullable disable

namespace TestTask_Roman.Migrations
{
    [DbContext(typeof(MedicalDbContext))]
    partial class MedicalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestTask_Roman.Data.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("Номер");

                    b.HasKey("Id");

                    b.ToTable("Участки", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 100
                        },
                        new
                        {
                            Id = 200
                        },
                        new
                        {
                            Id = 300
                        },
                        new
                        {
                            Id = 400
                        },
                        new
                        {
                            Id = 500
                        },
                        new
                        {
                            Id = 600
                        });
                });

            modelBuilder.Entity("TestTask_Roman.Data.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("Участок");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Имя");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Фамилия");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Отчество");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("Кабинет");

                    b.Property<int?>("SpecializationId")
                        .HasColumnType("int")
                        .HasColumnName("Специализация");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("RoomId");

                    b.HasIndex("SpecializationId");

                    b.ToTable("Врачи", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AreaId = 100,
                            FirstName = "Игорь",
                            LastName = "Иванов",
                            MiddleName = "Александрович",
                            RoomId = 10,
                            SpecializationId = 1
                        },
                        new
                        {
                            Id = 2,
                            AreaId = 200,
                            FirstName = "Дмитрий",
                            LastName = "Петров",
                            MiddleName = "Сергеевич",
                            RoomId = 12,
                            SpecializationId = 2
                        },
                        new
                        {
                            Id = 3,
                            AreaId = 300,
                            FirstName = "Елена",
                            LastName = "Сидорова",
                            MiddleName = "Ивановна",
                            RoomId = 13,
                            SpecializationId = 3
                        },
                        new
                        {
                            Id = 4,
                            AreaId = 400,
                            FirstName = "Андрей",
                            LastName = "Кузнецов",
                            MiddleName = "Петрович",
                            RoomId = 14,
                            SpecializationId = 4
                        },
                        new
                        {
                            Id = 5,
                            AreaId = 500,
                            FirstName = "Ольга",
                            LastName = "Николаева",
                            MiddleName = "Алексеевна",
                            RoomId = 15,
                            SpecializationId = 5
                        },
                        new
                        {
                            Id = 6,
                            AreaId = 100,
                            FirstName = "Алексей",
                            LastName = "Смирнов",
                            MiddleName = "Дмитриевич",
                            RoomId = 11,
                            SpecializationId = 2
                        },
                        new
                        {
                            Id = 7,
                            AreaId = 200,
                            FirstName = "Марина",
                            LastName = "Волкова",
                            MiddleName = "Сергеевна",
                            RoomId = 12,
                            SpecializationId = 3
                        },
                        new
                        {
                            Id = 8,
                            AreaId = 300,
                            FirstName = "Николай",
                            LastName = "Козлов",
                            MiddleName = "Андреевич",
                            RoomId = 13,
                            SpecializationId = 4
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Екатерина",
                            LastName = "Морозова",
                            MiddleName = "Владимировна",
                            RoomId = 14,
                            SpecializationId = 5
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Илья",
                            LastName = "Павлов",
                            MiddleName = "Геннадьевич",
                            RoomId = 15,
                            SpecializationId = 1
                        });
                });

            modelBuilder.Entity("TestTask_Roman.Data.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Адрес");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("Участок");

                    b.Property<DateTime>("BirthDate")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Дата рождения");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Имя");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Фамилия");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Отчество");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("Пол");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Пациенты", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "ул. Пушкина, д. 10",
                            AreaId = 100,
                            BirthDate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Иван",
                            LastName = "Иванов",
                            MiddleName = "Иванович",
                            Sex = "Муж"
                        },
                        new
                        {
                            Id = 2,
                            Address = "ул. Лермонтова, д. 5",
                            AreaId = 200,
                            BirthDate = new DateTime(1990, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Мария",
                            LastName = "Петрова",
                            MiddleName = "Алексеевна",
                            Sex = "Жен"
                        },
                        new
                        {
                            Id = 3,
                            Address = "ул. Гоголя, д. 15",
                            AreaId = 300,
                            BirthDate = new DateTime(1975, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Алексей",
                            LastName = "Сидоров",
                            MiddleName = "Петрович",
                            Sex = "Муж"
                        },
                        new
                        {
                            Id = 4,
                            Address = "ул. Тургенева, д. 20",
                            AreaId = 400,
                            BirthDate = new DateTime(1985, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Елена",
                            LastName = "Кузнецова",
                            MiddleName = "Сергеевна",
                            Sex = "Жен"
                        },
                        new
                        {
                            Id = 5,
                            Address = "ул. Чехова, д. 25",
                            AreaId = 500,
                            BirthDate = new DateTime(1995, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Игорь",
                            LastName = "Николаев",
                            MiddleName = "Александрович",
                            Sex = "Муж"
                        },
                        new
                        {
                            Id = 6,
                            Address = "ул. Достоевского, д. 30",
                            AreaId = 100,
                            BirthDate = new DateTime(1984, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Анна",
                            LastName = "Смирнова",
                            MiddleName = "Андреевна",
                            Sex = "Жен"
                        },
                        new
                        {
                            Id = 7,
                            Address = "ул. Пастернака, д. 35",
                            AreaId = 200,
                            BirthDate = new DateTime(1979, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Сергей",
                            LastName = "Волков",
                            MiddleName = "Николаевич",
                            Sex = "Муж"
                        },
                        new
                        {
                            Id = 8,
                            Address = "ул. Есенина, д. 40",
                            AreaId = 300,
                            BirthDate = new DateTime(1991, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ольга",
                            LastName = "Козлова",
                            MiddleName = "Викторовна",
                            Sex = "Жен"
                        },
                        new
                        {
                            Id = 9,
                            Address = "ул. Шолохова, д. 45",
                            AreaId = 400,
                            BirthDate = new DateTime(1981, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Дмитрий",
                            LastName = "Морозов",
                            MiddleName = "Игоревич",
                            Sex = "Муж"
                        },
                        new
                        {
                            Id = 10,
                            Address = "ул. Ломоносова, д. 50",
                            AreaId = 500,
                            BirthDate = new DateTime(1992, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Екатерина",
                            LastName = "Андреева",
                            MiddleName = "Дмитриевна",
                            Sex = "Жен"
                        });
                });

            modelBuilder.Entity("TestTask_Roman.Data.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("Номер");

                    b.HasKey("Id");

                    b.ToTable("Кабинеты", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 10
                        },
                        new
                        {
                            Id = 11
                        },
                        new
                        {
                            Id = 12
                        },
                        new
                        {
                            Id = 13
                        },
                        new
                        {
                            Id = 14
                        },
                        new
                        {
                            Id = 15
                        });
                });

            modelBuilder.Entity("TestTask_Roman.Data.Models.Specialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Название");

                    b.HasKey("Id");

                    b.ToTable("Специализации", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Терапевт"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Хирург"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Травматолог"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Отоларинголог"
                        },
                        new
                        {
                            Id = 5,
                            Title = "Дерматолог"
                        });
                });

            modelBuilder.Entity("TestTask_Roman.Data.Models.Doctor", b =>
                {
                    b.HasOne("TestTask_Roman.Data.Models.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("TestTask_Roman.Data.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("TestTask_Roman.Data.Models.Specialization", "Specialization")
                        .WithMany()
                        .HasForeignKey("SpecializationId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Area");

                    b.Navigation("Room");

                    b.Navigation("Specialization");
                });

            modelBuilder.Entity("TestTask_Roman.Data.Models.Patient", b =>
                {
                    b.HasOne("TestTask_Roman.Data.Models.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Area");
                });
#pragma warning restore 612, 618
        }
    }
}
